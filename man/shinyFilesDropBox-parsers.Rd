% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filechoose.R, R/dirchoose.R, R/filesave.R
\name{shinyFilesDropBox-parsers}
\alias{shinyFilesDropBox-parsers}
\alias{parseDropFilePaths}
\alias{parseDropDirPath}
\alias{parseDropSavePath}
\title{Convert the output of a selection to platform specific path(s)}
\usage{
parseDropFilePaths(selection, roots = c(Home = ""))

parseDropDirPath(selection, roots = c(Home = ""))

parseDropSavePath(selection, roots = c(Home = ""))
}
\arguments{
\item{selection}{The corresponding input variable to be parsed}

\item{roots}{The path to the root as specified in the \code{shinyDropFileChoose()}
call in \code{shinyServer()}}
}
\value{
A data frame mathcing the format of \code{\link[shiny]{fileInput}}
}
\description{
This function takes the value of a shinyFiles button input variable and 
converts it to be easier to work with on the server side. In the case of file
selections  and saving the input variable is converted to a data frame (using 
\code{parseDropFilePaths()} or \code{parseDropSavePath() respectively}) of the same 
format as that provided by \code{\link[shiny]{fileInput}}. The only caveat 
here is that the MIME type cannot be inferred in file selections so this will 
always be an empty string and new files doesn't have a size so this is left 
out with file saving. In the case of folder selection the input variable is 
converted to a string (using \code{parseDropDirPath()}) giving the absolute path 
to the selected folder.
}
\details{
The use of \code{parseDropFilePaths} makes it easy to substitute fileInput and 
shinyFiles in your code as code that relies on the values of a file selection
doesn't have to change.
}
\examples{
\dontrun{
token = drop_auth(new_user = FALSE, cache=TRUE)
ui <- shinyUI(bootstrapPage(
shinyDropFilesButton('files', 'File select', 'Please select a file', FALSE),
verbatimTextOutput('rawInputValue'),
verbatimTextOutput('filepaths')
))

server <- shinyServer(function(input, output,session) {
shinyDropFileChoose(input, 'files',session = session, dtoken =token)
output$rawInputValue <- renderPrint({str(input$files)})
output$filepaths <- renderPrint({parseDropFilePaths(input$files)})
})
}

}
\seealso{
Other shinyFilesDropBox: \code{\link{shinyDropFilesExample}},
  \code{\link{shinyFilesDropBox-buttons}},
  \code{\link{shinyFilesDropBox-observers}}
}
